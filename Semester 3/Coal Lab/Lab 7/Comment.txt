Query related to Lab 7 task 6.
Dear All,
Many of you have emailed me regarding this task. So I am sharing the hints so all of you can benefit from it.


Steps to follow:
1. Declare an array named list, values of your choice.
2. Declare a variable swap_count, value initialized to 0.


3. Code segment:
In this you are supposed to create a loop 
The loop will execute n-1 times. where n is the no. of elements in your array named list
Inside the loop:
In the first cycle of loop Starting from the 1st element, you will compare 1st with second, if  A[0] > A[1] then perform swap operation. And increment swap_count This completes one cycle of loop.


In 2nd cycle , you will compare 2nd with 3rd, if  A[1] > A[2] then perform swap operation. And increment swap_count This completes 2nd cycle of loop.



In this way in the last cycle you will compare A[2nd last] with A[last], if  A[n-1] > A[n] then perform swap operation. And increment swap_count This completes last cycle of loop.


Loop Ends


After the loop ends, display the value of swap_count and for your verification display the list elements as well you will observe that largest element would be at the last position.


Some important points:


To make it more understandable you can say we are actually implementing 1st round/ pass of bubble sort algorithm.
Pass 1.
For j =
2… N, if
A[j] < A[j-1]  then swap A[j] and A[j– 1]. This
will place the largest
element
in position N.
It is not complete bubble sort as that would require nested loop and array would be completely sorted.












Important Points to remember: ( Mistakes identified during correction)
Lab 1and 2:
1.    If there is no radix with a number like 25 then take it as decimal.


2.   Until now in COAL Lab whenever we have declared string , the data type is of Byte.


3.imm8 means the constant value of 8 bits. Do not consider it a variable.


4. While implementing an assembly language code for high level equation do not do in single step. Use registers.


Lab 3 and Lab 4


1. Value of smallest decimal value for data type sdword would be
- 2^31 = 2147483648


2. Initialization for null-terminated string with favorite color value.
favoritecolor BYTE "red", 0


3. For indexing be careful the first element of array is at index 0. Many of you have made mistakes while indexing. Be careful while using different types of operands.


In case of scale factors you just increment your esi/ index register by 1. 
In case of direct-offset you add constants.


4. If you are dealing with signed numbers you should use data type of sbyte/ sword/sdword


As many students have done mistakes in lab 4 I am uploading the solution of few parts.
























;