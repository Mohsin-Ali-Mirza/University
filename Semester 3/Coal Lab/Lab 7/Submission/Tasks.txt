********************************** Task 1 ***********************************
INCLUDE Irvine32.inc
.data
var1 byte ?
var2 byte ?
var DWORD 5
x byte ?
str1 byte "Enter a number:",0
str2 byte "Enter 2nd number:",0
.code
main PROC
mov edx, OFFSET str1
call WriteString 
call ReadDec 
mov var1, al 
mov edx, OFFSET str2
call WriteString 
call ReadDec 
mov var2,al 
movzx ecx, var1 
movzx edx, var2 
cmp var, ecx
JNB set 
cmp ecx, edx
JNAE set 
mov x,0 
jmp quit 
set:
mov x,1

quit:
movzx edx, x
call DumpRegs
exit
main ENDP
END main




********************************** Task 2 ***********************************
Include Irvine32.inc

.data
arr sword 0,0,0,0,0,0,0,0,0,0,0
var dword 0
str1 byte "Found:",0
str2 byte "Not Found",0

.code
main PROC
mov esi,0
mov ecx, lengthof arr

l1:
movsx eax,arr[esi*type arr] 
cmp eax,var
jne found
inc esi
loop l1

mov edx, offset str2
call writestring
jmp quit

found:
mov edx, offset str1
call writestring
call writeint
jmp quit

quit:
main ENDP
end main
********************************** Task 3 ***********************************
Include Irvine32.inc

.data
arr byte 1,1,1,1
str1 byte "The 4 elements are not equal",0
str2 byte "The 4 elements are equal",0

.code
main PROC
mov esi,0
mov ecx, lengthof arr-1
l1:
mov al, arr[esi*type arr]
inc esi
cmp al,arr[esi*type arr]
jne notequal

loop l1
mov edx,offset str2
jmp quit

notequal:
mov edx, offset str1

quit:
call writestring
exit
main ENDP
end main

********************************** Task 4 ***********************************


Include Irvine32.inc

.data
str1 byte "Enter Your Number:",0
arr word 10, 4, 7, 14, 299, 156, 3, 19, 29, 300, 20
var1 byte ?
str2 byte"Found:",0
str3 byte"Not Found:",0

.code

main PROC
mov edx,offset str1
call writestring
call readdec


mov ecx, lengthof arr
mov esi,0

l1:
movzx ebx, arr[esi*type arr]
cmp eax, ebx
je found

inc esi
loop l1

mov edx,offset str3
call writestring
jmp quit


found:
mov edx,offset str2
call writestring
call writedec
jmp quit

quit:
exit
main ENDP
end main

********************************** Task 5 ***********************************
Include Irvine32.inc

.data
Swap_Count dword 0
list dword 5,4,3,2,1
str1 byte "Count is:",0

.code
main PROC

mov ecx, lengthof list-1
mov esi,0

l1:
mov eax, list[esi*type list]
inc esi
cmp eax,list[esi*type list]
jna continue

swap:
mov ebx,0
xchg ebx,list[esi*type list] ; list[i+1]
dec esi
xchg ebx,list[esi*type list]	; list[i]
inc esi	;list[i+1]
xchg ebx,list[esi*type list]	; list[i]
inc Swap_Count

continue:
loop l1


mov ecx,lengthof list
mov esi,0

l2:
mov eax, list[esi*type list]
call writedec
call crlf
inc esi
loop l2 
mov edx,offset str1
call writestring
mov eax, Swap_Count
call writedec


exit
main ENDP
end main