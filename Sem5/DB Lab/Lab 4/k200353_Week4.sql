--NOTES PLEASE IGNORE THIS
SELECT FIRST_NAME,DEPARTMENT_ID FROM EMPLOYEES GROUP BY FIRST_NAME,DEPARTMENT_ID;
--WORKS ON AGGREGATE FUNCTION BUT IF YOU DO SELECT * FROM EMPLOYEES GROUP BY DEPARTMENT_ID WOULDNT WORK
SELECT COUNT(*) FROM EMPLOYEES GROUP BY DEPARTMENT_ID;
--HAVING IS USED IF YOU WANT TO APPLY AGGREGATE FUNCTIONS IN THE WHERE CLAUSE
--YOU CANT USE ORDER BY IN SUBQUERIES THEREFORE YOU HAVE TO USE HAVING TO ACHIEVE THAT
--AGGREGATE FUNCTIONS SUCH AS SUM(, MIN(
SELECT DEPARTMENT_ID, SUM(SALARY) AS "TOTAL SALARY" FROM EMPLOYEES GROUP BY DEPARTMENT_ID HAVING SUM(SALARY)>1500;
SELECT EMPLOYEE_ID,FIRST_NAME FROM EMPLOYEES WHERE EMPLOYEE_ID IN (SELECT MANAGER_ID FROM EMPLOYEES);
SELECT FIRST_NAME, DEPARTMENT_ID FROM EMPLOYEES WHERE DEPARTMENT_ID IN(SELECT DEPARTMENT_ID FROM DEPARTMENTS WHERE LOCATION_ID=1700);
SELECT SALARY FROM EMPLOYEES WHERE SALARY>ANY(2000,3000,40000);

--TASKS
SELECT * FROM EMPLOYEES;

--Task 1
SELECT DEPARTMENT_ID,COUNT(*),AVG(SALARY) 
FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID;

--Task 2
SELECT JOB_ID,COUNT(*) 
FROM EMPLOYEES 
GROUP BY JOB_ID; 

--Task 3
SELECT FIRST_NAME,HIRE_DATE 
FROM EMPLOYEES 
WHERE HIRE_DATE>ANY
     (SELECT HIRE_DATE FROM EMPLOYEES WHERE EMPLOYEE_ID = 110);

--Task 4
SELECT DEPARTMENT_ID,MAX(SALARY) 
FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID HAVING MAX(SALARY)>=15000; 

--Task 5
SELECT EMPLOYEE_ID, FIRST_NAME,LAST_NAME,JOB_ID 
FROM EMPLOYEES 
WHERE SALARY<ALL
     (SELECT SALARY FROM EMPLOYEES WHERE JOB_ID = 'IT_PROG');

--Task 6
SELECT * 
FROM EMPLOYEES 
WHERE EMPLOYEE_ID != ALL
     (SELECT EMPLOYEE_ID FROM JOB_HISTORY);

--Task 7
SELECT MANAGER_ID,MIN(SALARY)
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL GROUP BY MANAGER_ID HAVING MIN(SALARY)!=(2000) ORDER BY MIN(SALARY) DESC;

--Task 8
CREATE TABLE EMPLOYEES_BKP AS SELECT * FROM EMPLOYEES WHERE 1=2;
INSERT INTO EMPLOYEES_BKP
(SELECT * 
FROM EMPLOYEES 
WHERE HIRE_DATE =ANY
    (SELECT START_DATE FROM JOB_HISTORY WHERE START_DATE = '13-JAN-01'));

--TASK 9
UPDATE EMPLOYEES_BKP SET SALARY=SALARY*1.2
WHERE JOB_ID IN
(SELECT JOB_ID FROM JOBS WHERE MIN_SALARY = 6000);

--TASK 10
DELETE FROM EMPLOYEES_BKP
WHERE EMPLOYEE_ID IN
            (SELECT MANAGER_ID 
             FROM EMPLOYEES) AND
      DEPARTMENT_ID IN
            (SELECT DEPARTMENT_ID 
             FROM DEPARTMENTS 
             WHERE DEPARTMENT_NAME LIKE 'Fi%');
             
--TASK 11
SELECT DEPARTMENT_ID,SALARY,FIRST_NAME 
FROM EMPLOYEES
WHERE 5 <ANY
    (SELECT COUNT(*)
     FROM EMPLOYEES
     GROUP BY DEPARTMENT_ID)
     AND SALARY>20000;






    


